package Chap04;

import java.util.Scanner;

public class IntStackTester {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		IntStack s = new IntStack(64); //최대 64개를 푸쉬할 수 있는 스택
		
		while(true) {
			System.out.println(); //메뉴 구분을 위한 빈 행 추가
			System.out.printf("현재 데이터 개수 : %d / %d\n",s.size(),s.getCapacity());
			System.out.print("(1) 푸쉬 (2) 팝 (3) 피크 (4) 덤프 (5) 검색 (6) 스택 비우기  (0) 종료: ");
			
			int menu = sc.nextInt();
			if (menu == 0) break;
			
			int x;
			switch(menu) {
			case 1: 
				System.out.print("데이터: "); //푸쉬
				x = sc.nextInt();
				try {
					s.push(x);
				}catch(IntStack.OverflowIntStackException e) {
					System.out.println("스택이 가득 찼습니다.");
				}
				break;
				
				
			case 2: 
				try {
					x = s.pop();
					System.out.println("팝한 데이터는 " + x + "입니다.");
				}catch(IntStack.EmptyIntStackException e) {
					System.out.println("스택이 비었습니다.");
				}
				break;
				
			case 3: 
				try {
					x = s.peek();
					System.out.println("피크한 데이터는 " + x +"입니다.");
				}catch (IntStack.EmptyIntStackException e) {
					System.out.println("스택이 비었습니다.");
				}
				break;
				
			case 4: 
				s.dump(); //덤프
				break;
			}
		}
				

	}

}
